/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/rgb.h>

#define LYDEF 0
#define LYSYM 1
#define LYNAV 2
#define LYALT 3
// #define LYFUN 4

&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

// Please work!
// &spi1 {
//     led_strip {
//         chain-length = <7>;
//     };
// };

// &led_strip {
//     chain-length = <8>;
// };

/ {
    behaviours {
        ctrl_nav: ctrl_nav {
            compatible = "zmk,behavior-hold-tap";
            label = "ctrl_nav";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&sl LYNAV>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_escape {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
        };
        
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BKSP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

// LYDEF
// [   Q   ] [   W   ] [   F   ] [   P   esc   B   ]    [   J   ] [   L   ] [   U   ] [   Y   ] [   .   ]
// [   A   ] [   R   ] [   S   ] [   T   tab   G   ]    [   M   bsp   N   ] [   E   ] [   I   ] [   O   ]
// [   Z   ] [   X   ] [   C   ] [   D   ] [   V   ]    [   K   ] [   H   ] [   ,   ] [   ;   ] [   _   ]
//                               [ LYNAV ] [ SPACE ]    [ ENTER ] [ LYSYM ]
//                                  ctrl      ~alt        shift

        default_layer {
            bindings = <
            &kp Q  &kp W  &kp F  &kp P      &kp B            &kp J           &kp L      &kp U     &kp Y     &kp DOT
            &kp A  &kp R  &kp S  &kp T      &kp G            &kp M           &kp N      &kp E     &kp I     &kp O
            &kp Z  &kp X  &kp C  &kp D      &kp V            &kp K           &kp H      &kp CMMA  &kp SCLN  &kp UNDER
                                 &ctrl_nav  &lt LYALT SPC    &mt LSHIFT RET  &to LYSYM
            >;
        };

// LYSYM (WIP)
// [       ] [       ] [       ] [       ] [       ]    [       ] [   4   ] [   5   ] [   6   ] [       ]
// [       ] [       ] [       ] [       ] [       ]    [       ] [   1   ] [   2   ] [   3   ] [       ]
// [       ] [       ] [       ] [       ] [       ]    [       ] [   7   ] [   8   ] [   9   ] [       ]
//                               [ LYDEF ] [       ]    [   0   ] [ LY??? ]
//                                                        shift

        symbol_layer {
            bindings = <
            &kp NUM_1  &kp NUM_2  &kp NUM_3        &kp NUM_4        &kp NUM_5     &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0
            &kp TAB    &kp LC(S)  &kp DQT          &kp PIPE2        &kp HASH      &kp MINUS  &kp EQL    &kp LBKT   &kp RBKT   &kp DEL
            &kp ESC    &kp TILDE  &kp NON_US_BSLH  &kp NON_US_HASH  &kp TILDE2    &kp MINUS  &kp GRAVE  &kp LBKT   &kp RBKT   &kp DEL
                                                   &to LYDEF        &kp LGUI      &kp RGUI   &mo 2
            >;
        };

        // LYNAV
        navigation_layer {
            bindings = <
            &kp N  &kp ATSN   &kp HASH  &kp DLLR  &kp PRCT    &kp CRRT   &kp AMPS      &kp KMLT  &kp LPRN  &kp RPRN
            &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN    &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC  &kp BKSP
            &kp LSFT  &kp KPLS   &kp LBKT  &kp RBKT  &kp BSLH    &kp UNDER  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
                                           &mo 3     &kp LCTL    &kp SPC    &mo 2
            >;
        };

        // LYALT
        alt_layer {
            bindings = <
            &kp A  &kp ATSN   &kp HASH  &kp DLLR  &kp PRCT    &kp CRRT   &kp AMPS      &kp KMLT  &kp LPRN  &kp RPRN
            &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN    &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC  &kp BKSP
            &kp LSFT  &kp KPLS   &kp LBKT  &kp RBKT  &kp BSLH    &kp UNDER  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
                                           &mo 3     &kp LCTL    &kp SPC    &mo 2
            >;
        };

        // LYFUN
        // fun_layer {
        //     bindings = <
        //     &kp BANG  &kp ATSN   &kp HASH  &kp DLLR  &kp PRCT    &kp CRRT   &kp AMPS      &kp KMLT  &kp LPRN  &kp RPRN
        //     &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN    &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC  &kp BKSP
        //     &kp LSFT  &kp KPLS   &kp LBKT  &kp RBKT  &kp BSLH    &kp UNDER  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
        //                                    &mo 3     &kp LCTL    &kp SPC    &mo 2
        //     >;
        // };
    };
};
